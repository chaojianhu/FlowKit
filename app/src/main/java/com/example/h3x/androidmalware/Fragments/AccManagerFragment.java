package com.example.h3x.androidmalware.Fragments;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.example.h3x.androidmalware.R;



public class AccManagerFragment extends Fragment {




    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.fragment_acc_manager, container, false);
        // Inflate the layout for this fragment
        final TextView acc = v.findViewById(R.id.AccountManagerView);
        String possibleEmail = GetAccounts();
        acc.setText(possibleEmail);


        return v;
    }



    private String GetAccounts(){
        int MY_PERMISSIONS_REQUEST_READ_CONTACTS = 0;
        if (ContextCompat.checkSelfPermission(this.getActivity(),
                android.Manifest.permission.GET_ACCOUNTS)
                != PackageManager.PERMISSION_GRANTED) {


            if (ActivityCompat.shouldShowRequestPermissionRationale(this.getActivity(),
                    android.Manifest.permission.GET_ACCOUNTS)) {
                //TODO

            } else {


                ActivityCompat.requestPermissions(this.getActivity(),
                        new String[]{android.Manifest.permission.GET_ACCOUNTS},
                        MY_PERMISSIONS_REQUEST_READ_CONTACTS);
            }
        }
        String possibleEmail="";
            possibleEmail += "************* Get Registered Gmail Account *************\n\n";
            Account[] accounts = AccountManager.get(this.getActivity()).getAccountsByType("com.google");

            for (Account account : accounts) {

                possibleEmail += " --> "+account.name+" : "+account.type+"; \n";
                possibleEmail += " \n\n";

            }
        return possibleEmail;
    }

    /*private String GetContacts(){
        String out = "";
        Cursor contacts = getActivity().getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);


        int nameFieldColumnIndex = contacts.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME);
        int numberFieldColumnIndex = contacts.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER);

        while(contacts.moveToNext()) {

            String contactName = contacts.getString(nameFieldColumnIndex);
            out+= "Name:"+contactName+", ";

            String number = contacts.getString(numberFieldColumnIndex);
            out+= "Number:"+number+";\n";
        }

        contacts.close();

        return out;
    }*/
}
